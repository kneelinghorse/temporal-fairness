{
  "sample_size_requirements": {
    "primary_validation": {
      "53_percent_claim": {
        "minimum_n": 2178,
        "formula": "n = (Z^2 * p * (1-p)) / E^2",
        "confidence": 0.95,
        "margin_of_error": 0.02,
        "power": 0.80
      },
      "subgroup_analysis": {
        "per_group": 2000,
        "total_groups": 10,
        "correction": "Benjamini-Hochberg FDR"
      },
      "temporal_correlation": {
        "adjustment": "n_eff = n * (1-ρ)/(1+ρ)",
        "typical_rho": 0.3,
        "inflated_n": 7800
      }
    },
    "exploratory": {
      "minimum": 500,
      "recommended": 1000,
      "purpose": "Initial pattern detection"
    },
    "confirmatory": {
      "minimum": 2000,
      "recommended": 5000,
      "purpose": "Hypothesis testing"
    },
    "regulatory": {
      "minimum": 10000,
      "recommended": 50000,
      "purpose": "Compliance demonstration"
    }
  },
  
  "confidence_intervals": {
    "bootstrap": {
      "method": "BCa (Bias-Corrected and accelerated)",
      "iterations": 10000,
      "confidence_level": 0.95,
      "implementation": {
        "bias_correction": "z0 parameter",
        "acceleration": "a parameter",
        "percentile_method": "For comparison"
      },
      "advantages": [
        "Second-order accuracy",
        "Handles skewed distributions",
        "Transformation-respecting"
      ]
    },
    "stratification": {
      "by": "Protected attributes",
      "maintain": "Demographic representation",
      "minimum_per_stratum": 30
    },
    "temporal_considerations": {
      "block_bootstrap": "For time series",
      "block_size": "sqrt(n) or cross-validation",
      "overlapping": "Allowed for efficiency"
    }
  },
  
  "multiple_testing": {
    "method": "Benjamini-Hochberg FDR",
    "fdr_level": 0.10,
    "structure": {
      "primary": "No correction needed",
      "secondary": "10 subgroups with FDR",
      "tertiary": "Exploratory with stricter FDR"
    },
    "implementation": {
      "sort_pvalues": "Ascending order",
      "find_threshold": "Largest i where P(i) <= (i/m) * alpha",
      "reject": "All H(i) for i <= threshold"
    },
    "alternatives": {
      "bonferroni": "Too conservative for many tests",
      "holm": "Slightly less conservative",
      "hierarchical": "For structured hypotheses"
    }
  },
  
  "effect_sizes": {
    "cohens_h": {
      "formula": "h = 2 * arcsin(sqrt(p1)) - 2 * arcsin(sqrt(p2))",
      "interpretation": {
        "small": 0.20,
        "medium": 0.50,
        "large": 0.80
      },
      "fairness_context": {
        "negligible": "< 0.10",
        "concerning": "0.10 - 0.20",
        "actionable": "0.20 - 0.50",
        "critical": "> 0.50"
      },
      "53_percent_example": {
        "value": 0.12,
        "interpretation": "Small but meaningful"
      }
    },
    "disparate_impact": {
      "formula": "DI = P(positive|minority) / P(positive|majority)",
      "four_fifths_rule": 0.80,
      "interpretation": {
        "severe": "< 0.50",
        "moderate": "0.50 - 0.80",
        "acceptable": "> 0.80"
      }
    },
    "number_needed_to_harm": {
      "formula": "NNH = 1 / |P(harm|A) - P(harm|B)|",
      "interpretation": "Number of decisions to cause one additional harm",
      "policy_relevance": "Translates to real-world impact"
    }
  },
  
  "hypothesis_testing": {
    "hierarchical_structure": {
      "level_1": {
        "hypothesis": "Temporal bias exists",
        "test": "H0: p = 0.50 vs H1: p > 0.50",
        "method": "Exact binomial test"
      },
      "level_2": {
        "hypothesis": "Specific magnitude",
        "test": "H0: p <= 0.50 vs H1: p = 0.53",
        "method": "Equivalence testing"
      },
      "level_3": {
        "hypothesis": "Causal mechanism",
        "test": "Urgency-based patterns",
        "method": "Structural equation modeling"
      }
    },
    "power_analysis": {
      "monte_carlo_simulations": true,
      "iterations": 10000,
      "parameters": {
        "effect_size": "Cohen's h",
        "alpha": 0.05,
        "power": 0.80
      }
    },
    "adaptive_design": {
      "interim_analysis": "At 50% data collection",
      "early_stopping": {
        "efficacy": "p < 0.0054",
        "futility": "p > 0.50"
      },
      "sample_size_reestimation": "Allowed with alpha spending"
    }
  },
  
  "temporal_analysis": {
    "stationarity_tests": {
      "adf": "Augmented Dickey-Fuller",
      "kpss": "Kwiatkowski-Phillips-Schmidt-Shin",
      "pp": "Phillips-Perron"
    },
    "autocorrelation": {
      "acf": "Autocorrelation function",
      "pacf": "Partial autocorrelation function",
      "ljung_box": "Test for independence"
    },
    "trend_analysis": {
      "mann_kendall": "Non-parametric trend test",
      "sens_slope": "Magnitude of trend",
      "seasonal_kendall": "For seasonal data"
    }
  },
  
  "validation_framework": {
    "cross_validation": {
      "method": "Time-series aware CV",
      "variants": [
        "Forward chaining",
        "Sliding window",
        "Blocked CV"
      ],
      "folds": 10,
      "stratification": "By time and group"
    },
    "sensitivity_analysis": {
      "parameters": [
        "Window size",
        "Threshold values",
        "Sample size",
        "Time period"
      ],
      "robustness_checks": [
        "Outlier removal",
        "Different metrics",
        "Alternative methods"
      ]
    },
    "replication": {
      "independent_team": true,
      "code_availability": "GitHub",
      "data_synthetic": "Reproducible generation",
      "documentation": "Complete methods"
    }
  },
  
  "reporting_standards": {
    "neurips_requirements": {
      "error_bars": "All performance metrics",
      "random_seeds": "Fixed and reported",
      "compute_resources": "Specified",
      "statistical_tests": "With p-values and effect sizes"
    },
    "facct_standards": {
      "fairness_definitions": "Multiple perspectives",
      "intersectionality": "Considered",
      "societal_impact": "Discussed",
      "limitations": "Explicitly stated"
    },
    "reproducibility": {
      "code": "Public repository",
      "data": "Available or synthetic",
      "environment": "Docker/conda",
      "results": "Raw data provided"
    }
  }
}